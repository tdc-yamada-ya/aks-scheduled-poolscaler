// Code generated by MockGen. DO NOT EDIT.
// Source: internal/scaler/pool.go

// Package mock_scaler is a generated GoMock package.
package mock_scaler

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	scaler "github.com/tdc-yamada-ya/aks-scheduled-poolscaler/internal/scaler"
	reflect "reflect"
)

// MockPoolUpdater is a mock of PoolUpdater interface
type MockPoolUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockPoolUpdaterMockRecorder
}

// MockPoolUpdaterMockRecorder is the mock recorder for MockPoolUpdater
type MockPoolUpdaterMockRecorder struct {
	mock *MockPoolUpdater
}

// NewMockPoolUpdater creates a new mock instance
func NewMockPoolUpdater(ctrl *gomock.Controller) *MockPoolUpdater {
	mock := &MockPoolUpdater{ctrl: ctrl}
	mock.recorder = &MockPoolUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPoolUpdater) EXPECT() *MockPoolUpdaterMockRecorder {
	return m.recorder
}

// UpdatePool mocks base method
func (m *MockPoolUpdater) UpdatePool(ctx context.Context, resourceGroupName scaler.ResourceGroupName, resourceName scaler.ResourceName, agentPoolName scaler.AgentPoolName, parameters *scaler.Parameters) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdatePool", ctx, resourceGroupName, resourceName, agentPoolName, parameters)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdatePool indicates an expected call of UpdatePool
func (mr *MockPoolUpdaterMockRecorder) UpdatePool(ctx, resourceGroupName, resourceName, agentPoolName, parameters interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePool", reflect.TypeOf((*MockPoolUpdater)(nil).UpdatePool), ctx, resourceGroupName, resourceName, agentPoolName, parameters)
}
